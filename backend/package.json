{
  "name": "job-app-js",
  "version": "0.0.1",
  "description": "",
  "author": "job-app",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "prestart": "rimraf dist",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "typeorm": "typeorm-ts-node-commonjs",
    "typeorm:create-migration": "npm run typeorm -- migration:create ./src/migrations/$npm_config_name",
    "typeorm:run-migration": "npm run typeorm migration:run -- -d ./typeOrm.config.ts",
    "typeorm:revert-migration": "npm run typeorm migration:revert -- -d ./typeOrm.config.ts",
    "typeorm:drop-all-schema": "npm run typeorm schema:drop -- -d ./typeOrm.config.ts",
    "typeorm:show-migration": "npm run typeorm migration:show -- -d ./typeOrm.config.ts",
    "start": "npm run format && npm run lint && NODE_ENV=local npm run typeorm:run-migration && NODE_ENV=local nest start --watch",
    "start:development": "npm run format && npm run lint && NODE_ENV=development npm run typeorm:run-migration && NODE_ENV=development nest build && NODE_ENV=development node dist/src/main",
    "start:staging": "npm run format && npm run lint && NODE_ENV=staging npm run typeorm:run-migration && NODE_ENV=staging nest build && NODE_ENV=staging node dist/src/main",
    "start:production": "npm run format && npm run lint && NODE_ENV=production npm run typeorm:run-migration && NODE_ENV=production nest build && NODE_ENV=production node dist/src/main",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/axios": "^0.1.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/jwt": "^9.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/mongoose": "^9.2.0",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/swagger": "^6.1.2",
    "@nestjs/throttler": "^3.0.0",
    "@nestjs/typeorm": "^9.0.1",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "crypto": "^1.0.1",
    "mongoose": "^6.5.0",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pg": "^8.11.3",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.20"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.4",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.2",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.5",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.0.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coveragePathIgnorePatterns": [
      "<rootDir>/main.ts",
      "<rootDir>/utils",
      "<rootDir>/providers/test",
      "<rootDir>/middleware",
      "<rootDir>/migrations",
      "<rootDir>/common/exceptions",
      "<rootDir>/common/constants",
      "<rootDir>/common/interceptors",
      "<rootDir>/common/email",
      "<rootDir>/common/helper",
      "<rootDir>/common/services",
      "<rootDir>/security/auth/guards"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/$1"
    }
  }
}
